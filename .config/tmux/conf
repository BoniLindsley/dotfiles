# Reload config
# This is given first, so that reloading via hotkey is always possible.
bind c-r source-file ~/.config/tmux/conf

# For version incompatibility checks,
#   see `https://github.com/tmux/tmux/issues/1747`.
#
#

# Use Powerline
# Currently not used. It toggles CPU on and off frequently.
#if 'test -e /usr/bin/powerline-daemon' \
#  'run "/usr/bin/powerline-daemon -q"'
#if 'test -e /usr/share/tmux/powerline.conf' \
#  'source /usr/share/tmux/powerline.conf'

# The default key is c-b, but that is a common key for previous page.
unbind c-b
set-option -g prefix c-a
# Use prefix + a to send c-a.
bind-key a send-prefix
# Show status bar, but toggle with hotkey prefix + C-b.
set -g status on
bind C-b set status
# Do not let programs change the window name.
set -g allow-rename off
# Set the $TERM environment variable for new windows.
%if #{||:#{m:[01].*,#{version}},#{m:2.[0],#{version}}}
  set -g default-terminal "screen-256color"
%else
  # The screen support seems to break around version 2.9~3.0
  set -g default-terminal "tmux-256color"
%endif
# Use Vi style keys in copy mode.
set -g mode-keys vi
# Use notification bar for bell and alerts.
set -g bell-action any
set -g display-time 500
set -g visual-bell on
# Disables function and escape key sequence detection.
set -g escape-time 0
# Double tap prefix for the next window.
bind c-a next-window
# The default window cycling keys are `n`, `p`.
# Releasing Ctrl makes cycling slighlty troublesome.
bind c-n next-window
bind c-p previous-window
# Label the first window as 1 instead of 0,
# since M-0 is on the right.
set -g base-index 1
# Change
bind m-0 set-window-option force-width 80
# Use vlook for console locking. Mostly for use with tty.
set -g lock-command vlock
bind c-l lock
# Write to all panels in a window
bind c-y set-option synchronize-panes

# #### Session management

# Switch the current client to display a different session.
bind-key -T prefix ( switch-client -p
bind-key -T prefix ) switch-client -n
# Create new session via prefix + *.
bind-key -T prefix * new-session

# Move window using `prefix + M` and then enter `session:window`
bind M command-prompt "move-pane -t %1"
# Hotkey to terminate `tmux` after a confirmation.
bind K confirm-before -p "kill-server? (y/n)" kill-server
## # Switch to another session if and after destorying the attached one.
## set-option -g detach-on-destroy off
## # Use UTF-8.
## set-option -g utf8 on

# Refresh mupdf with a hotkey.
bind c-m run-shell "pkill -HUP mupdf"

# For some reason, `tmux` starts a login shell by default.
# Simply start the shell to use an interactive non-login shell.
set-option -g default-command $SHELL

# Display more content in the right side of the status bar.
#set-option -g status-right-length 40
set-option -g status-right-length 64

# ### Custom tray

# Start tmux status tray daemon.
bind B run-shell -b "$HOME/base/bin/boni-tmux-tray-start"
bind b run-shell -b "$HOME/base/bin/boni-tmux-tray-toggle"

## ###  Custom notification
#
### # This is used when the notification script talks to tmux directly.
### bind '`' show-buffer -b notifications \; set-option -gu status-right \; set-option -gu status-right-style
## Use this for the status line daemon.
#bind '`' choose-buffer -f '#{m:notification-*,#{buffer_name}}'
##bind '`' show-buffer -b notifications
#bind 'Â¬' run-shell "$HOME/base/bin/boni-tmux-notification-clear" \; \
#         run-shell "$HOME/base/bin/boni-newsboat-notify 0"

# ### urlview

# https://github.com/tmux-plugins/tmux-urlview/blob/master/urlview.tmux

bind-key C-u \
  capture-pane -J -b "boni-urlview" \; \
  save-buffer /tmp/boni-urlview \; \
  delete-buffer -b "boni-urlview" \; \
  new-window "bash -i -c 'urlview /tmp/boni-urlview'"

# ## Custom hotkey tables

# Activate hotkey table with `<prefix> <C-s>`.
# Goes back to `prefix` table after a key in the table is triggered..
bind-key C-s switch-client -Tboni

bind-key -Tboni C-v switch-client -Tboni-music
bind-key -Tboni-music C-v \
  run-shell -b "pactl set-sink-mute   @DEFAULT_SINK@ toggle"
  # run-shell -b "amixer -q set Master toggle"
bind-key -Tboni-music 1 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 10% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 2 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 20% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 3 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 30% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 4 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 40% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 5 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 50% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 6 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 60% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 7 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 70% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 8 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 80% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 9 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 90% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music 0 \
  run-shell -b "pactl set-sink-volume @DEFAULT_SINK@ 100% \
             && pactl set-sink-mute   @DEFAULT_SINK@ 0"
bind-key -Tboni-music s \
  run-shell -b "$HOME/base/bin/boni-setup-pulseaudio-loopback 1"
bind-key -Tboni-music C-s \
  run-shell -b "$HOME/base/bin/boni-setup-pulseaudio-loopback 2 0"
bind-key -Tboni-music n       run-shell -b "mpc next"
bind-key -Tboni-music p       run-shell -b "mpc prev"
bind-key -Tboni-music space   run-shell -b "mpc toggle"
bind-key -Tboni-music C-n     run-shell -b "mpc --port 6601 next"
bind-key -Tboni-music C-p     run-shell -b "mpc --port 6601 prev"
bind-key -Tboni-music C-space run-shell -b "mpc --port 6601 toggle"

source-file -q ~/.config/tmux/tpm.conf
source-file -q ~/.config/tmux/conf.d/navigation.tmux.conf
if-shell 'test -z "#{version}"' \
  'source-file -q ~/.config/tmux/conf.d/style-2.8.tmux.conf' \
  'source-file -q ~/.config/tmux/conf.d/style.tmux.conf'
